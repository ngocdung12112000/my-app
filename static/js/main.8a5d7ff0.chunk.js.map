{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","className","length","map","onClick","nextQuestion","handleAnswerOptionsClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAGe,SAASA,IACpB,IAAMC,EAAY,CACpB,CACCC,aAAc,sOACdC,cAAe,CACd,CAAEC,WAAY,KAAMC,WAAW,GAC/B,CAAED,WAAY,KAAMC,WAAW,GAC/B,CAAED,WAAY,KAAMC,WAAW,GAC/B,CAAED,WAAY,KAAMC,WAAW,KAGjC,CACCH,aAAc,4PACdC,cAAe,CACd,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,KAGhC,CACUH,aAAc,2LACvBC,cAAe,CACd,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,MAAOC,WAAW,GAChC,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,KAGhC,CACCH,aAAc,8CACdC,cAAe,CACd,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,MAnCL,EAwCqBC,mBAAS,GAxC9B,mBAwClBC,EAxCkB,KAwCDC,EAxCC,OAyCSF,oBAAS,GAzClB,mBAyClBG,EAzCkB,KAyCPC,EAzCO,OA0CCJ,mBAAS,GA1CV,mBA0ClBK,EA1CkB,KA0CXC,EA1CW,KA2DzB,OACA,gCACI,qBAAKC,UAAU,QAAf,SACI,6CAEJ,qBAAKA,UAAY,MAAjB,SACKJ,EACG,sBAAKI,UAAU,gBAAf,4BACoBF,EADpB,IAC4BV,EAAUa,UAGtC,qCAEI,sBAAKD,UAAU,mBAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,6CAAgBN,EAAgB,EAAhC,IAAoCN,EAAUa,OAA9C,SAEJ,sBAAKD,UAAU,gBAAf,cAAiCZ,EAAUM,GAAiBL,aAA5D,UAEJ,qBAAKW,UAAU,iBAAf,SACKZ,EAAUM,GAAiBJ,cAAcY,KAAI,SAACZ,GAAD,OAC1C,wBAAQa,QAAS,kBApCR,SAACX,GAC3BA,GACCO,EAASD,EAAQ,GAIrB,IAAMM,EAAeV,EAAkB,EACpCU,EAAehB,EAAUa,OACxBN,EAAmBS,GAGnBP,GAAa,GAyB0BQ,CAAyBf,EAAcE,YAA9D,SACKF,EAAcC,0BCpF/C,IAYee,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC9B,EAAD,MAEF+B,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8a5d7ff0.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\n\nexport default function App(){\n    const questions = [\n\t\t{\n\t\t\tquestionText: 'Hiện nay Mark Zuckerberg 31 tuổi , 9 năm nữa tuổi anh ấy gấp đôi tuổi em gái mình hiện tại . Hỏi bây giờ tuổi em gái Mark là bao nhiêu ?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '13', isCorrect: false },\n\t\t\t\t{ answerText: '11', isCorrect: true },\n\t\t\t\t{ answerText: '20', isCorrect: false },\n\t\t\t\t{ answerText: '17', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Trong một bức ảnh có ba thế hệ của một gia đình, trong đó có hai người cha, hai người con. Hỏi tấm ảnh này có ít nhất mấy người?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '2', isCorrect: false },\n\t\t\t\t{ answerText: '3', isCorrect: true },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '5', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n            questionText: 'Bốn người đào hai cái hố hết 2 giờ. Hỏi một người đào trong 2 giờ được mấy cái hố?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '1', isCorrect: true },\n\t\t\t\t{ answerText: '1/2', isCorrect: false },\n\t\t\t\t{ answerText: '2', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Harry Potters có bao nhiêu phần?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '1', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: true },\n\t\t\t],\n\t\t},\n    ];\n    \n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [showScore, setShowScore] = useState(false);\n    const [score, setScore] = useState(0);\n\n    const handleAnswerOptionsClick = (isCorrect) => {\n        if(isCorrect){\n            setScore(score + 1);\n        }\n        \n\n        const nextQuestion = currentQuestion + 1;\n        if(nextQuestion < questions.length){\n            setCurrentQuestion(nextQuestion);\n        }\n        else {\n            setShowScore(true);\n        }\n    };\n\n    return(\n    <div>\n        <div className=\"title\">\n            <h1>Quizz App</h1>\n        </div>\n        <div className = \"app\">\n            {showScore ? (\n                <div className=\"score-section\">\n                    Your score is: {score}/{questions.length}\n                </div>\n            ):(\n                <>\n                    \n                    <div className=\"question-section\">\n                        <div className='question-count'>\n                            <span>Question {currentQuestion+1}/{questions.length} </span>\n                        </div>\n                        <div className=\"question-text\"> {questions[currentQuestion].questionText} </div>\n                    </div>\n                    <div className=\"answer-section\">\n                        {questions[currentQuestion].answerOptions.map((answerOptions) => (\n                            <button onClick={() => handleAnswerOptionsClick(answerOptions.isCorrect)}>\n                                {answerOptions.answerText}\n                            </button>\n                        ) )}\n                    </div>\n                </>\n            )\n            }\n        </div>\n    </div>\n        \n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}